{"version":3,"sources":["context/firebase.js","lib/firebase.js","context/user.js","helpers/is-user-loggedin.js","helpers/protected-route.js","helpers/protected-dashboard.js","App.js","hooks/user-auth-user.js","index.js","constants/routes.js"],"names":["FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FieldValue","firestore","userContext","IsUserLoggedIn","user","loggedInPath","children","rest","console","log","render","location","to","pathname","state","from","ProtectedRoute","ROUTES","ProtectedDashboard","Login","lazy","Signup","Home","ProductDetails","Cart","Order","App","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","a","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","listner","useAuthListner","Provider","value","fallback","src","path","exact","component","ReactDOM","document","getElementById","DASHBOARD","LOGIN","SIGN_UP","HOME","CART","ORDERS","PRODUCTDETAILS"],"mappings":"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","file":"static/js/main.690b2ab1.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst FirebaseContext = createContext(null)\nexport default FirebaseContext\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nconst config = {\n    apiKey: \"AIzaSyDqBepHTNSPEUiJjCFTJyNSM54e-OHbxtY\",\n    authDomain: \"shoppingcart-7f922.firebaseapp.com\",\n    projectId: \"shoppingcart-7f922\",\n    storageBucket: \"shoppingcart-7f922.appspot.com\",\n    messagingSenderId: \"852473201183\",\n    appId: \"1:852473201183:web:12fb4311e3057d40320b2a\",\n    measurementId: \"G-3X56WP12T4\"\n}\n\nconst firebase = Firebase.initializeApp(config)\nconst { FieldValue } = Firebase.firestore;\nexport { firebase, FieldValue }","import { createContext } from \"react\";\n\nconst userContext = createContext(null)\nexport default userContext","import propTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport default function IsUserLoggedIn({ user, loggedInPath, children, ...rest }) {\n    console.log(rest, \"rest\")\n    console.log(children, \"children\")\n    //use a reference to medium about this\n    //child contains everything inside that \n    //ie wrapped like isuserloggedin and protectedroute and this contains props that like props.children here it is destrctured\n    //rest contains other items that is not contained in the rest ites ie children,user,loggedinpath\n\n    return (\n        <Route\n\n            {...rest}\n            // i think location is included in the rest\n            render={({ location }) => {\n                if (!user) {\n                    return children\n                }\n\n                if (user) {\n                    return (\n                        //take a reference from reactrouter redirect\n                        <Redirect to={{\n                            pathname: loggedInPath,\n                            state: { from: location }\n                        }}></Redirect>\n                    )\n                }\n                return null;\n            }\n            }\n        >\n\n\n\n        </Route>\n\n\n    )\n\n}\n\nIsUserLoggedIn.propTypes = {\n    user: propTypes.object,\n    loggedInPath: propTypes.string.isRequired,\n    children: propTypes.object.isRequired\n}","import propTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\nimport * as ROUTES from '../constants/routes'\n\nexport default function ProtectedRoute({ user, children, ...rest }) {\n    console.log(rest, \"rest\")\n\n    return (\n        <Route\n\n            {...rest}\n            render={({ location }) => {\n                if (user) {\n                    return children\n                    //dashboard\n                }\n\n                if (!user) {\n                    return (\n                        <Redirect to={{\n                            pathname: ROUTES.LOGIN,\n                            state: { from: location }\n                        }}></Redirect>\n                    )\n                }\n                return null;\n            }\n            }\n        >\n\n\n\n        </Route>\n\n\n    )\n\n}\n\nProtectedRoute.propTypes = {\n    user: propTypes.object,\n    children: propTypes.object.isRequired\n}","import propTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\nimport * as ROUTES from '../constants/routes'\n\nexport default function ProtectedDashboard({ user, children, ...rest }) {\n    console.log(rest, \"rest\")\n\n    return (\n        <Route\n\n            {...rest}\n            render={({ location }) => {\n                if (user) {\n                    return (\n                        <Redirect to={{\n                            pathname: ROUTES.HOME,\n                            state: { from: location }\n                        }}></Redirect>\n\n                    )\n                    //dashboard\n                }\n\n                if (!user) {\n                    return (\n                        <Redirect to={{\n                            pathname: ROUTES.LOGIN,\n                            state: { from: location }\n                        }}></Redirect>\n                    )\n                }\n                return null;\n            }\n            }\n        >\n\n\n\n        </Route>\n\n\n    )\n\n}\n\nProtectedDashboard.propTypes = {\n    user: propTypes.object,\n    children: propTypes.object.isRequired\n}","import { lazy, Suspense, useContext, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport * as ROUTES from './constants/routes'\nimport userContext from \"./context/user\";\nimport useAuthListner from './hooks/user-auth-user'\nimport IsUserLoggedIn from \"./helpers/is-user-loggedin\";\nimport ProtectedRoute from \"./helpers/protected-route\";\nimport ProtectedDashboard from \"./helpers/protected-dashboard\";\n// import lottie from 'lottie-web'\nconst Login = lazy(() => import('./pages/login'))\nconst Signup = lazy(() => import('./pages/signup'))\nconst Home = lazy(() => import('./pages/home'))\nconst ProductDetails = lazy(() => import('./pages/productdetails'))\nconst Cart = lazy(() => import('./pages/cart'))\nconst Order = lazy(() => import('./pages/order'))\n\nfunction App() {\n  const { user } = useAuthListner()\n  // const container = useRef(null)\n  // useEffect(() => {\n\n  //   lottie.loadAnimation({\n  //     container: container.current, // the dom element that will contain the animation\n  //     renderer: 'svg',\n  //     loop: true,\n  //     autoplay: true,\n  //     path: require('./loading.json') // the path to the animation json\n  //   })\n  // }\n  //   , [])\n\n  //   ref={container} className=\"container\"\n\n  return (\n    //here we are passing the user in an object when may items are in value we can take that by destrcturing that \n    <userContext.Provider value={{ user }}>\n      <Router>\n        <Suspense fallback={<img src=\"./loading.gif\" />}>\n          <Switch>\n            <IsUserLoggedIn user={user} loggedInPath={ROUTES.HOME} path={ROUTES.LOGIN} exact >\n              <Login></Login>\n            </IsUserLoggedIn>\n            <Route path={ROUTES.SIGN_UP} component={Signup} />\n            <ProtectedRoute user={user} path={ROUTES.HOME} exact>\n              <Home />\n            </ProtectedRoute>\n            <ProtectedDashboard user={user} path={ROUTES.DASHBOARD} exact>\n              <Home />\n            </ProtectedDashboard>\n\n\n            <Route path={ROUTES.PRODUCTDETAILS} component={ProductDetails} />\n            <Route path={ROUTES.CART} component={Cart} />\n            <Route path={ROUTES.ORDERS} component={Order} />\n          </Switch>\n\n        </Suspense>\n\n      </Router>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n","import { useContext, useEffect, useState } from \"react\";\nimport FirebaseContext from \"../context/firebase\";\n\nexport default function useAuthListner() {\n\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')))\n    //when page loads firebase context is null and when it is invoked it has some value\n    //here we are taking the firebase and fieldvalue as objects in provider so we have to take these as objects here also\n    const { firebase } = useContext(FirebaseContext)\n    useEffect(async () => {\n        const listner = await firebase.auth().onAuthStateChanged((authUser) => {\n            if (authUser) {\n                localStorage.setItem('authUser', JSON.stringify(authUser))\n                setUser(authUser)\n            }\n            else {\n                localStorage.removeItem(\"authUser\")\n                setUser(null)\n            }\n\n        })\n        //here we are returning a function so like const =()=> we return ()=> simply\n        return () => listner()\n    }, [firebase])\n    //here we are passing as an object if many are there we can destcture that on the destination\n    return { user }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/app.css'\nimport FirebaseContext from './context/firebase'\nimport { firebase, FieldValue } from './lib/firebase'\n\n//a provider value can be passed to its children and also childrens children\nReactDOM.render(\n\n  < FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n\n  </FirebaseContext.Provider >\n  ,\n  document.getElementById('root')\n);\n\n","export const DASHBOARD = '/'\nexport const LOGIN = \"/login\"\nexport const SIGN_UP = '/signup'\nexport const HOME = \"/home\"\nexport const CART = '/cart'\nexport const ORDERS = '/orders'\nexport const PRODUCTDETAILS = '/product-details/:proId'"],"sourceRoot":""}